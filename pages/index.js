import { useState } from 'react';
import Head from 'next/head'
import Confetti from 'react-confetti'
import useWindowDimensions from '../hooks/useWindowDimension'

export default function Home(props) {
  const { height, width } = useWindowDimensions();
  const [showResult, setShowResult] = useState(false);

  const minNumber = props.min || 0;
  const maxNumber = props.max || 99;

  const [ranNum, setRanNum] = useState(0);
  const [startBtnShow, setStartBtnShow] = useState(true);

  const handleRanDom = (start) => {
    //change number every 100ms
    if(start){
      setStartBtnShow(!startBtnShow);
      setShowResult(false);
      const interval = setInterval(() => {
        const random = Math.floor(Math.random() * (maxNumber - minNumber + 1) + minNumber);
        setRanNum(random);
      }, 20);
      localStorage.setItem('interval', interval);
    }else{
      setStartBtnShow(!startBtnShow);
      setShowResult(true);
      clearInterval(localStorage.getItem('interval'));
    }
  }

  return (
    <>
      <Head>
        <title>JS PROM RANDOM</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {showResult && (
        <Confetti
          width={width}
          height={height}
          recycle={false}
          // opacity={0.8}
          tweenDuration={50000}
          numberOfPieces={1000}
        />
      )}
      <main className='backdrop-blur-sm min-h-screen flex items-center justify-center'>
        <div className={`fixed w-screen h-screen transition-all duration-1000 ${!startBtnShow ? 'bg-black/70' : ''}`} />
        <div className='min-w-[600px] flex flex-col items-center bg-neutral-50 px-20 py-10 rounded-3xl shadow-2xl z-10'>
          <h1 className='font-bold text-5xl text-neutral-900'>{props.title}</h1>
          <div className='rounded-full w-32 h-32 bg-fuchsia-600 flex items-center justify-center my-8 shadow-xl'>
            <span
              className={`text-5xl font-semibold text-neutral-50 flex items-center justify-center`}
            >
              {ranNum}
            </span>
          </div>
          <div>
            {startBtnShow ? (
              <button
              onClick={() => handleRanDom(true)}
              className='bg-green-500 shadow-lg px-8 py-4 text-3xl font-semibold rounded-xl text-neutral-50 hover:bg-green-600 transition-all'
              >
                START!
              </button>
            ) : (
              <button
                onClick={() => handleRanDom(false)}
                className='bg-red-500 shadow-lg px-8 py-4 text-3xl font-semibold rounded-xl text-neutral-50 hover:bg-red-600 transition-all'
              >
                STOP!
              </button>
            )}
            
          </div>
        </div>
      </main>
    </>
  )
}

import fsPromises from 'fs/promises';
import path from 'path'
export async function getStaticProps() {
  const filePath = path.join(process.cwd(), 'settings.json');
  const jsonData = await fsPromises.readFile(filePath);
  const objectData = JSON.parse(jsonData);

  return {
    props: objectData,
    revalidate: 1
  }
}
